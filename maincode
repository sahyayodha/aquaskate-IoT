//this is using cpp language. run this on the official arduino app and ur good to go
//if u want to use it for personal use, contact me on telegram @yodhakun or discord Neoza#3526

#include <OneWire.h> 
#include <Wire.h>
#include <DallasTemperature.h>
#include <LiquidCrystal_I2C.h>
#include <RTClib.h>
#include <Servo.h>
#include <EEPROM.h>
#include <GravityTDS.h>
#define ONE_WIRE_BUS 14
#define waterlevelPower 12
#define waterlevelPin A0
#define echoPin 11
#define trigPin 13
#define tdsSensorPin A1

LiquidCrystal_I2C lcd = LiquidCrystal_I2C(0x27, 20, 4);

GravityTDS gravitytds;

long durasi; 
int jarak;

RTC_DS3231 rtc;
DateTime Date;
String feedTime[3] = {"07:00","12:00","18:00"};
char daysOfTheWeek[7][12] = {"SENIN", "SELASA", "RABU", "KAMIS", "JUMAT", "SABTU", "MINGGU"};

Servo myservo;
int pos = 0;

byte customChar[] = {
  B01100,
  B10010,
  B10010,
  B01100,
  B00000,
  B00000,
  B00000,
  B00000
};

int solenoidPin = 8; //pin Solenoid pompa
int solenoidPin2 = 6; //pin Solenoid pembuangan 
int LED = 10; //pin LED
int FAN = 5; //pin FAN  
volatile byte relayState = LOW;
long lastDebounceTime = 0;  
long debounceDelay = 10000;
int value = 0; //sinmpen value water level
int red = 2; 
int green = 3;
int blue = 4;
int red2 = 15;
int blue2 = 16;
int green2 = 17;
int servoPin  = 18;
float temperature = 25,tdsValue;


OneWire oneWire(ONE_WIRE_BUS);  
DallasTemperature sensors(&oneWire);

void setup() {
    
  lcd.init();
  lcd.backlight();
  pinMode(1, INPUT);
  pinMode(5, OUTPUT);
  pinMode(waterlevelPower, OUTPUT);
  digitalWrite(waterlevelPower, LOW);
  lcd.begin(20,4);
  lcd.createChar(0, customChar);
  pinMode(solenoidPin, OUTPUT);
  pinMode(red, OUTPUT);
  pinMode(green, OUTPUT);
  pinMode(blue, OUTPUT);
  pinMode(red2, OUTPUT);
  pinMode(blue2, OUTPUT);
  pinMode(green2, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(tdsSensorPin, INPUT);
  Serial.begin(9600);
  myservo.attach(servoPin);
  gravitytds.setPin(tdsSensorPin);
  gravitytds.setAref(5.0);
  gravitytds.setAdcRange(1024);
  gravitytds.begin();
  sensors.begin();
  rtc.begin();
 if (rtc.lostPower()) 
  {
 //   rtc.adjust(DateTime(F(DATE), F(TIME)));
  }
//  rtc.adjust(DateTime(F(DATE), F(TIME)));
  // INISIALISASI RTC (REAL TIME CLOCK)
  Serial.println("SETUP RTC SELESAI");
}

void loop() {
  //suhu
    sensors.requestTemperatures();
    Serial.print("SUHU : ");
    Serial.print(sensors.getTempCByIndex(0));
    Serial.print(" \xC2\xB0");
    Serial.println("C");
//suhu
if (sensors.getTempCByIndex(0) < 30) {
  digitalWrite(LED, HIGH);
  Serial.println("SUHU DIBAWAH 30 DERAJAT"); //led nyala jika suhu dibawah 30 derajat
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("SUHU DIBAWAH 30");
  lcd.setCursor(0,3);
  lcd.print("DERAJAT");
  delay(3000);
 }else {
  digitalWrite(LED, LOW);
 }
 if (sensors.getTempCByIndex(0) > 30){
  digitalWrite(FAN, HIGH);
  Serial.println("SUHU DIATAS 30 DERAJAT"); //fan nyala jika suhu diatas 30 derajat
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("SUHU DIATAS 30");
  lcd.setCursor(0,3);
  lcd.print("DERAJAT");
  delay(3000);
 }else {
  digitalWrite(FAN, LOW);
 }
 //suhu
 //~~~~~~~~~~~~
 //water level
  value = analogRead(waterlevelPin);
  
  Serial.print("WATER LEVEL  : ");
  Serial.println(value);

  int value = analogRead(waterlevelPin);
  //water level
  //~~~~~~~~~~~~
  //solenoid
if (value < 100) {
 Serial.println("AIR LUMAYAN KERING");
 digitalWrite(red, LOW);
 digitalWrite(green, LOW);
 digitalWrite(blue, HIGH);
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("AQUASKATE");
 lcd.setCursor(0,1);
 lcd.print("----------------");
 lcd.setCursor(0,2);
 lcd.print("AIR LUMAYAN KERING");
 delay(3000);
 }
if ((value > 100) && (value <=300)) {
 Serial.println("AIR BIASA SAJA");
 digitalWrite(red, LOW);
 digitalWrite(green, LOW);
 digitalWrite(blue, HIGH);
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("AQUASKATE"); 
 lcd.setCursor(0,1);
 lcd.print("----------------");
 lcd.setCursor(0,2);
 lcd.print("AIR BIASA SAJA ");
 delay(3000);
 }
if (value > 300) {
 Serial.println("AIR KELEBIHAN");
 digitalWrite(red, LOW);
 digitalWrite(green, LOW);
 digitalWrite(blue, HIGH);
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("AQUASKATE");
 lcd.setCursor(0,1);
 lcd.print("----------------");
 lcd.setCursor(0,2);
 lcd.print("AIR KELEBIHAN");
 delay(3000);
 }
 //solenoid
 //~~~~~~~~~~~~~~~~~~
 //ultrasonik sensor 
  digitalWrite(trigPin, LOW);
  delay(10);
  digitalWrite(trigPin, HIGH);
  delay(10);
  digitalWrite(trigPin, LOW);

  durasi = pulseIn(echoPin, HIGH);
  jarak = durasi * 0.034 / 2;

  Serial.print("JARAK : ");
  Serial.print(jarak);
  Serial.println(" cm");
  
if(jarak > 5) {                 //belum tentu 5 cm ntar diitung aj
  Serial.println("PELET DALAM GELAS SUDAH HABIS");
  digitalWrite(red2, HIGH);
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("PELET DALAM GELAS");
  lcd.setCursor(0,3);
  lcd.print("SUDAH HABIS");
  delay(3000);
  }
  //ultrasonik sensor 
  //~~~~~~~~~~~~~~~~~~
  //rtc
  Date = rtc.now(); 
  String rtcTime = String(Date.hour()) + ":" + String(Date.minute());
  String rtcTanggal = String(Date.day()) + "/" + String(Date.month()) + "/" + String(Date.year());
  
  Serial.print("HARI : ");
  Serial.println(daysOfTheWeek[Date.dayOfTheWeek()]);
  Serial.print("TANGGAL : ");
  Serial.println(rtcTanggal);
  Serial.print("JAM : ");
  Serial.println(rtcTime);
  //rtc
  //~~~~~~~~~~~~~~~~~
  //servo fishfeeder
  
if(rtcTime == feedTime[0]){                                     
    myservo.write(180); 
    delay(500);
    myservo.write(133);
    delay(3000);
    Serial.println("WAKTU MAKAN IKAN JAM 07.00");
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("AQUASKATE");
    lcd.setCursor(0,1);
    lcd.print("----------------");
    lcd.setCursor(0,2);
    lcd.print("WAKTU MAKAN IKAN JAM 07.00");
}else if(rtcTime == feedTime[1]){                                           
    myservo.write(180); 
    delay(500);
    myservo.write(133);
    delay(3000);
    Serial.println("WAKTU MAKAN IKAN JAM 12.00");
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("AQUASKATE");
    lcd.setCursor(0,1);
    lcd.print("----------------");
    lcd.setCursor(0,2);
    lcd.print("WAKTU MAKAN IKAN JAM 12.00");                                     
}else if(rtcTime == feedTime[2]){                                         
    myservo.write(180); 
    delay(500);
    myservo.write(133);
    delay(3000); 
    Serial.println("WAKTU MAKAN IKAN JAM 18.00");
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("AQUASKATE");
    lcd.setCursor(0,1);
    lcd.print("----------------");
    lcd.setCursor(0,2);
    lcd.print("WAKTU MAKAN IKAN JAM 18.00");                                      
}
  //servo fishfeeder
  //TDS
  gravitytds.setTemperature(temperature);
  gravitytds.update();
  tdsValue = gravitytds.getTdsValue();
  Serial.print(tdsValue,0);
  Serial.println("ppm");
  //TDS

  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("SUHU :");
  lcd.setCursor(7,2);
  lcd.print(sensors.getTempCByIndex(0));
  lcd.setCursor(15,2);
  lcd.write(0);
  lcd.print("C");
  lcd.setCursor(7,3);
  lcd.print(sensors.getTempFByIndex(0));
  lcd.setCursor(15,3);
  lcd.write(0);
  lcd.print("F");
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("WATER LEVEL :");
  lcd.setCursor(15,2);
  lcd.print(value);
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("JARAK :");
  lcd.setCursor(8,2);
  lcd.print(jarak);
  lcd.setCursor(10,2);
  lcd.print("CM");
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("TANGGAL : ");
  lcd.setCursor(10,2);
  lcd.print(rtcTanggal);
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("HARI : "); 
  lcd.setCursor(7,2);
  lcd.print(daysOfTheWeek[Date.dayOfTheWeek()]);
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print("JAM : ");
  lcd.setCursor(6,2);
  lcd.print(rtcTime);
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AQUASKATE");
  lcd.setCursor(0,1);
  lcd.print("----------------");
  lcd.setCursor(0,2);
  lcd.print(tdsValue,0);
  lcd.setCursor(5,2);
  lcd.print("PPM");
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,1);
  lcd.print("YODHA GANTENG");
  lcd.setCursor(0,2);
  lcd.print("NO DEBAT");
}
